const int n = 10;
int m;
int a,b;

void test_array
{
	int a[10];
	a[1] = 4;
	printf(a[1] * 100);
	if (a[1] == 4);
	else a[2] = 5;
}
int fact(int n)
{
	if (n == 1) return (1);
	else return (n * fact(n - 1));
}
void test_logic (int a,int b,char d,char e)
{
	
	if (a < b) printf("LT is right!");
	else printf("LT is wrong!");
	if (a <= b) printf("LTE is right!");
	else printf("LTE is wrong!");
	if (a > b) printf("GT is wrong!");
	else printf("GT is right!");
	if (a >= b) printf("GTE is wrong!");
	else printf("GTE is right!");
	if (a != b) printf("NE is right!");
	else printf("NE is wrong!");
	if (a == b) printf("EQ is wrong!");
	else printf("EQ is right!");
	if (d < e) printf("LT is right!");
	else printf("LT is wrong!");
	if (d <= e) printf("LTE is right!");
	else printf("LTE is wrong!");
	if (d > e) printf("GT is wrong!");
	else printf("GT is right!");
	if (d >= e) printf("GTE is wrong!");
	else printf("GTE is right!");
	if (d != e) printf("NE is right!");
	else printf("NE is wrong!");
	if (d == e) printf("EQ is wrong!");
	else printf("EQ is right!");
}
void test_charandid
{
	const char _='_';
	const char a='a';
	const char b='b';
	const char c='c';
	const char d='d';
	const char e='e';
	const char f='f';
	const char g='g';
	const char h='h';
	const char i='i';
	const char j='j';
	const char k='k';
	const char l='l';
	const char m='m';
	const char n='n';
	const char o='o';
	const char p='p';
	const char q='q';
	const char r='r';
	const char s='s';
	const char t='t';
	const char u='u';
	const char v='v';
	const char w='w';
	const char x='x';
	const char y='y';
	const char z='z';
	const char aa='A';
	const char bb='B';
	const char cc='C';
	const char dd='D';
	const char ee='E';
	const char ff='F';
	const char gg='G';
	const char hh='H';
	const char ii='I';
	const char jj='J';
	const char kk='K';
	const char ll='L';
	const char mm='M';
	const char nn='N';
	const char oo='O';
	const char pp='P';
	const char qq='Q';
	const char rr='R';
	const char ss='S';
	const char tt='T';
	const char uu='U';
	const char vv='V';
	const char ww='W';
	const char xx='X';
	const char yy='Y';
	const char zz='Z';
	const char h0 = '+';
	const char h1 = '-';
	const char h2 = '*';
	const char h3 = '/';
	const char h456789 = '4';
	printf("success!");
}
int test_operator(int x)
{
	printf(3 * 4 + 2 * 7 / 3);
	printf((3 - 5) * x + 8);
	return (1);
}


int test_num
{
	const int a=1234567;
	const int b=890;
	const int c=-199;
	const int d=+199;
	const int e=0;
}
char test_string
{
	printf(" !#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~");
	return (0);
}
void test_define
{
	int a,b,c,d;
	char ee,e,eee;
	return;
}
void test_func
{
	const int a=10;
	int b;
	b = 20;
	printf(a + b);
}

void test_condition(int x)
{
	switch(x)
	{
		case 2 : printf("x is 2!");
		case 3 : printf("x is 3!");
		default : printf("x is unknown!");
	}
}
void test_while
{
	int i;
	i = 0;
	while (i < 5)
	{
		printf(i);
		i = i + 1;
	}
}
void main()
{
	test_logic(3,4,'a','b');
	test_logic(4,3,'b','a');
	test_logic(3,3,'a','a');
	test_operator(2);
	test_charandid;
	test_num;
	test_string;
	test_define;
	test_func;
	scanf(m);
	printf(fact(m) + 'a');
	scanf(a, b);
	printf(a);
	test_array;
	test_condition(2);
	test_condition(3);
	test_condition(4);
	test_while;
}